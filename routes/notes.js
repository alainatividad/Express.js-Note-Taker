const express = require("express");
const notes = express.Router();
const { v4: uuidv4 } = require("uuid");
// use helper fsUtils that is available on previous class activities
const {
  readFromFile,
  readAndAppend,
  deleteIdFromFile,
} = require("../helpers/fsUtils");

// GET Route for retrieving all the notes
notes.get("/", (req, res) => {
  readFromFile("./db/db.json").then((data) => res.json(JSON.parse(data)));
});

// GET Route for a specific note
notes.get("/:note_id", (req, res) => {
  const noteId = req.params.note_id;
  readFromFile("./db/db.json")
    .then((data) => JSON.parse(data))
    .then((json) => {
      const result = json.filter((note) => note.id === noteId);
      return result.length > 0
        ? res.json(result)
        : res.json(`No note with ID ${noteId}`);
    });
});

// POST Route for a new note
notes.post("/", (req, res) => {
  if (req.body) {
    const { title, text } = req.body;
    // make sure that there are values in both title and text
    if (title && text) {
      // put the destructured req.body and id generated by uuidv4 in an object called newnote
      const newNote = {
        title,
        text,
        id: uuidv4(),
      };

      readAndAppend(newNote, "./db/db.JSON");
      res.json(`Note added successfully`);
    }
  } else {
    res.error("Error in adding note");
  }
});

module.exports = notes;
